@use 'sass:math';
@import '../mixins/z-index';

@mixin hover-active($selector) {
  @media (hover: hover) and (pointer: fine) {
    #{$selector}:hover {
      @content;
    }
  }

  #{$selector}:active {
    @content;
  }
}

$button-transition-duration: 0.1s;
$button-transition: color $button-transition-duration ease-in-out,
  background-color $button-transition-duration ease-in-out,
  border-color $button-transition-duration ease-in-out,
  box-shadow $button-transition-duration ease-in-out,
  opacity $button-transition-duration ease-in-out;

.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  white-space: nowrap;
  user-select: none;
  border: 0 solid transparent;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-appearance: none;
  transition: $button-transition;
  overflow: hidden;
  transform: translateZ(0);
  padding: 0;

  &:hover,
  &:focus {
    text-decoration: none;
  }

  &:focus {
    outline: none;
  }

  &:not(:disabled):not(.disabled) {
    cursor: pointer;
  }

  &:not(:disabled):not(.disabled):active {
    background-image: none;
  }

  &::after {
    content: ' ';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: transparent;
    transition: background-color $button-transition-duration ease-in-out;
  }

  color: $white;

  @include hover-active('&:not(:disabled):not(.disabled)') {
    &::after {
      background: linear-gradient(
          0deg,
          rgba(0, 0, 0, 0.06),
          rgba(0, 0, 0, 0.06)
        ),
        linear-gradient(114.48deg, rgba(252, 190, 204, 0.4) 0%, #c0deff 83.65%);
    }
  }

  &.button--style-fill {
    &:disabled,
    &.disabled {
      background: linear-gradient(
        114.48deg,
        rgba(193, 199, 213, 0.6) 35.21%,
        rgba(255, 255, 255, 0.4) 100%
      );

      .button__content {
        opacity: 60%;
      }
    }

    @include hover-active('&:not(:disabled):not(.disabled)') {
      &::after {
        background: linear-gradient(
            0deg,
            rgba(0, 0, 0, 0.06),
            rgba(0, 0, 0, 0.06)
          ),
          linear-gradient(
            114.48deg,
            rgba(252, 190, 204, 0.4) 0%,
            #c0deff 83.65%
          );
      }
    }
  }

  background: linear-gradient(
    114.48deg,
    rgba(250, 148, 171, 0.2) 13.85%,
    rgba(73, 115, 234, 0.3) 94.58%
  );
  box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.08);
  backdrop-filter: blur(7px);
}

.button--size-big {
  $sizeName: 'big';
  $minWidth: 96px;
  $height: 56px;
  $maxHeight: 56px;
  $padding: 15px 16px;
  $loaderSize: 26px;
  $loaderSpacing: 8px;
  $borderRadius: 16px;

  width: 100%;
  border-radius: $borderRadius;

  .button__content {
    min-width: $minWidth;
    height: $height;
    max-height: $maxHeight;
    padding: $padding;
    z-index: z-index(button-content);
  }

  .button__loader {
    display: flex;
    $negativeLoaderMargin: #{math.div(strip-unit($loaderSize), -2)}px;
    margin: $negativeLoaderMargin 0;

    .loader__animation {
      stroke: currentColor;
      width: $loaderSize;
      height: $loaderSize;
    }
  }

  &.button--wrap {
    > .button__content {
      height: auto;
    }
  }

  &:not(.button--wrap) {
    & > .button__content {
      padding-top: 0;
      padding-bottom: 0;
    }
  }
}

.button--type-dark {
  //TODO: 변경 필요
  //   background-color: $greyBackground;

  &.button--style-weak {
    color: $grey700;
    background-color: rgb(242, 244, 246);

    @include hover-active('&:not(:disabled):not(.disabled)') {
      background-color: rgb(208, 212, 216);
    }
  }
}

.button--wrap {
  white-space: normal;
}

a.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;
}

a.button.disabled,
fieldset:disabled a.button {
  pointer-events: none;
}

.button__content {
  display: flex;
  align-items: center;
  justify-content: center;
  box-sizing: border-box;
}
